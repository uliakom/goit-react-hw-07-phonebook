{"version":3,"file":"static/js/536.3a9c7822.chunk.js","mappings":"sLAcO,SAASA,IAXdC,EAAAA,QAAAA,KAAa,CACXC,SAAU,UACVC,gBAAiB,cACjBC,QAAS,UAKXH,EAAAA,QAAAA,OAAe,O,gLCTJI,EAAWC,EAAAA,EAAAA,IAAH,+KASRC,EAAcD,EAAAA,EAAAA,IAAH,gZAeXE,EAAWF,EAAAA,EAAAA,OAAH,4sB,UCxBRG,EAAYH,EAAAA,EAAAA,IAAH,u4C,mBC8EtB,EA3EkB,SAAC,GAIZ,IAAD,IAHJI,WAAAA,OAGI,MAHS,CAAEC,KAAM,GAAIC,MAAO,IAG5B,EAFJC,EAEI,EAFJA,SACAC,EACI,EADJA,QAEA,GAAsCC,EAAAA,EAAAA,UAASL,EAAWC,MAA1D,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAwCF,EAAAA,EAAAA,UAASL,EAAWE,OAA5D,eAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OACHM,EAAeM,GACf,MACF,IAAK,QACHJ,EAAgBI,KAOhBC,EAAiB,mCAAG,WAAMH,GAAN,wEACxBA,EAAEI,iBADsB,kBAGhBZ,EAAS,CAAEF,KAAMK,EAAaJ,MAAOM,IAHrB,OAItBQ,EAAAA,OAAAA,QAAe,qBAAsB,CACnCC,cAAc,EACdC,SAAU,QACVC,WAAY,YAPQ,gDAUtBC,QAAQC,IAAR,MAVsB,yDAAH,sDAcvB,OACE,SAACtB,EAAD,WACE,kBAAMI,SAAUW,EAAhB,WACE,0BACE,8BACE,qCACA,kBACEQ,KAAK,OACLrB,KAAK,OACLY,MAAOP,EACPiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUhB,UAIhB,0BACE,8BACE,sCACA,kBACEY,KAAK,MACLrB,KAAK,QACLY,MAAOL,EACPe,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUhB,UAIhB,mBAAQY,KAAK,SAASK,SAAUvB,EAAhC,wB,UChEFwB,EAAYC,SAASC,cAAc,eAmDzC,EAjDc,WACZ,IAAQC,GAAcC,EAAAA,EAAAA,MAAdD,UACME,GAAYC,EAAAA,EAAAA,IAAuBH,GAAzCI,KACR,GAAqCC,EAAAA,EAAAA,KAArC,eAAOC,EAAP,KAAsBC,EAAtB,KAAsBA,UAChBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,SAAA/B,GACN,WAAXA,EAAEgC,MACJC,KAIJ,OADAC,OAAOC,iBAAiB,UAAWJ,GAC5B,WACLG,OAAOE,oBAAoB,UAAWL,OAI1C,IAAM5B,EAAiB,mCAAG,WAAMqB,GAAN,kFAEtB7C,EAAAA,EAAAA,MAFsB,SAGhB+C,GAAY,QAAEW,GAAIjB,GAAcI,IAHhB,OAItBS,IAJsB,gDAMtBxB,QAAQC,IAAR,MANsB,yDAAH,sDAUjBuB,EAAa,kBAAML,EAAS,MAElC,OAAOU,EAAAA,EAAAA,eACL,SAACtD,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAUoD,QAASN,EAAYtB,KAAK,SAApC,eAGCW,IACC,SAAC,EAAD,CACEjC,WAAY,CAAEC,KAAMgC,EAAQhC,KAAMC,MAAO+B,EAAQ/B,OACjDC,SAAUW,EACVV,QAASkC,SAKjBV","sources":["components/Loader/Loader.js","components/Modal/Modal.styled.jsx","components/Modal/ModalForm/ModalForm.styled.jsx","components/Modal/ModalForm/ModalForm.jsx","components/Modal/Modal.jsx"],"sourcesContent":["import { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nexport function startLoader() {\n  Loading.dots({\n    svgColor: '#FFA17F',\n    backgroundColor: 'transparent',\n    svgSize: '100px',\n  });\n}\n\nexport function stopLoader() {\n  Loading.remove(200);\n}\n\nexport function Loader() {\n  startLoader();\n  stopLoader();\n}","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.4);\n  position: fixed;\n  top: 0;\n  transition: opacity 1200ms, visibility 1000ms;\n`;\n\nexport const ModalWindow = styled.div`\npadding: 10px;\n max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  background-color: #ffffff;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  transform: translate(-50%, -50%);\n  transition: transform 1000ms;\n}`;\n\nexport const CloseBtn = styled.button`\n    display: block;\n      \n    font-size: 16px;\n    margin-left: 380px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    border-style: none;\n    color: #ffffff;\n    background: background: #FFA17F;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #00223E, #FFA17F);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #00223E, #FFA17F); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    &:hover,\n    &:focus {\n      transform: scale(1.1);\n      transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-transform: scale(1.1);\n      -moz-transform: scale(1.1);\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nposition: relative;\n  width: 400px;\n  height: 200px;\n  background-color: #ffffff;\n  border-radius: 4px;\n\n  form {\n    padding: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items:center;\n    row-gap: 10px;\n  }\n\n  label{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    span{\n        font-size: 13px;\n    }\n  }\n\n  input {\n    width: 200px;\n    height: 20px;\n    border-image: linear-gradient(to left, #00223E, #FFA17F);\n    border-image-slice: 1;\n    background: transparent;\n    font-size: 16px;\n  }\n\n  button {\n    display: block;\n    margin: 20px auto 20px auto;\n    width: 100px;\n    height: 30px;\n    text-align: center;\n    font-size: 16px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    border-style: none;\n    color: #ffffff;\n    background: background: #FFA17F;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #00223E, #FFA17F);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #00223E, #FFA17F); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    &:hover,\n    &:focus {\n      transform: scale(1.1);\n      transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-transform: scale(1.1);\n      -moz-transform: scale(1.1);\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './ModalForm.styled';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\n\nconst ModalForm = ({\n  initValues = { name: '', phone: '' },\n  onSubmit,\n  disable,\n}) => {\n  const [contactName, setContactName] = useState(initValues.name);\n  const [contactPhone, setContactPhone] = useState(initValues.phone);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n      case 'phone':\n        setContactPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const hanldeEditContact = async e => {\n    e.preventDefault();\n    try {\n      await onSubmit({ name: contactName, phone: contactPhone });\n      Notify.success('Your changes saved', {\n        clickToClose: true,\n        distance: '300px',\n        fontFamily: 'inherit',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={hanldeEditContact}>\n        <div>\n          <label>\n            <span>name </span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={contactName}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            <span>phone </span>\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              value={contactPhone}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" disabled={disable}>\n          Save\n        </button>\n      </form>\n    </Container>\n  );\n};\n\nexport default ModalForm;\n\nModalForm.propTypes = {\n  initValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n};\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Backdrop, ModalWindow, CloseBtn } from './Modal.styled';\nimport { useGetContactByIdQuery, useEditContactMutation } from 'redux/api';\nimport ModalForm from './ModalForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = () => {\n  const { contactId } = useParams();\n  const { data: contact } = useGetContactByIdQuery(contactId);\n  const [editContact, { isLoading }] = useEditContactMutation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleEscClose);\n    return () => {\n      window.removeEventListener('keydown', handleEscClose);\n    };\n  });\n\n  const hanldeEditContact = async data => {\n    try {\n      Loader();\n      await editContact({ id: contactId, ...data });\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const closeModal = () => navigate('/');\n\n  return createPortal(\n    <Backdrop>\n      <ModalWindow>\n        <CloseBtn onClick={closeModal} type=\"button\">\n          X\n        </CloseBtn>\n        {contact && (\n          <ModalForm\n            initValues={{ name: contact.name, phone: contact.phone }}\n            onSubmit={hanldeEditContact}\n            disable={isLoading}\n          />\n        )}\n      </ModalWindow>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n"],"names":["Loader","Loading","svgColor","backgroundColor","svgSize","Backdrop","styled","ModalWindow","CloseBtn","Container","initValues","name","phone","onSubmit","disable","useState","contactName","setContactName","contactPhone","setContactPhone","handleChange","e","currentTarget","value","hanldeEditContact","preventDefault","Notify","clickToClose","distance","fontFamily","console","log","type","pattern","title","required","onChange","disabled","modalRoot","document","querySelector","contactId","useParams","contact","useGetContactByIdQuery","data","useEditContactMutation","editContact","isLoading","navigate","useNavigate","useEffect","handleEscClose","code","closeModal","window","addEventListener","removeEventListener","id","createPortal","onClick"],"sourceRoot":""}