{"version":3,"file":"static/js/564.3a070ba3.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","pages/Home.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/PhoneBook/ContactListItem/ContactListItem.styled.jsx","components/PhoneBook/ContactListItem/ContactListItem.jsx","components/PhoneBook/PhoneBook.styled.jsx","redux/selectors.js","components/PhoneBook/PhoneBook.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Home.jsx"],"sourcesContent":["import { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nexport function startLoader() {\n  Loading.dots({\n    svgColor: '#FFA17F',\n    backgroundColor: 'transparent',\n    svgSize: '100px',\n  });\n}\n\nexport function stopLoader() {\n  Loading.remove(200);\n}\n\nexport function Loader() {\n  startLoader();\n  stopLoader();\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 20px;\n  margin: 50px auto;\n  width: 500px;\n  height: 700px;\n  border-radius: 5%;\n  background-color: #ffffff;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  overflow: hidden;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 400;\n  font-size: 40px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 400;\n  font-size: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  div {\n    margin-bottom: 20px;\n  }\n\n  lable {\n    display: block;\n    font-size: 14px;\n    display: block;\n    margin-top: 30px;\n  }\n\n  input {\n    display: block;\n    width: 300px;\n    height: 20px;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-width: 3px;\n    border-image: linear-gradient(to left, #00223E, #FFA17F);\n    border-image-slice: 1;\n    background: transparent;\n  }\n\n  button {\n    display: block;\n    margin: 0 auto 20px auto;\n    width: 100px;\n    height: 30px;\n    text-align: center;\n    font-size: 16px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    border-style: none;\n    color: #ffffff;\n    background: background: #FFA17F;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #00223E, #FFA17F);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #00223E, #FFA17F); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n\n    &:hover,\n    &:focus {\n      transform: scale(1.1);\n      transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-transform: scale(1.1);\n      -moz-transform: scale(1.1);\n    }\n  }\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useCreateContactMutation, useGetContactsQuery } from 'redux/api';\n\nconst ContactForm = () => {\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newContact = {\n        name,\n        phone,\n      };\n\n      if (\n        contacts.some(\n          contact =>\n            contact.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        return Notify.warning(\n          `${newContact.name} is already in contacts.\n        Please choose other name.`,\n          {\n            position: 'center-center',\n            timeout: 4000,\n          }\n        );\n      }\n      await createContact(newContact);\n      Notify.success('Contact has been added');\n      reset();\n    } catch (error) {\n      Notify.failure(`${error.message}`);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Phone number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n      <button type=\"submit\" disabled={isLoading}>\n        Add contact\n      </button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:not(last-child) {\n    margin-bottom: 20px;\n  }\n\n  button {\n    margin-right: 10px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    border-style: none;\n    color: #ffffff;\n    background: background: #FFA17F;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to left, #00223E, #FFA17F);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to left, #00223E, #FFA17F); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n\n    &:hover,\n    &:focus {\n      transform: scale(1.1);\n      transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-transform: scale(1.1);\n      -moz-transform: scale(1.2);\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  width: 300px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Wrap } from './ContactListItem.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactListItem = ({ contact }) => {\n  const [deleteContact, { isLoading: removing }] = useDeleteContactMutation();\n  const navigate = useNavigate();\n  const { name, phone, id } = contact;\n\n  const openModal = () => {\n    Loader();\n    navigate(`/contact/${id}`);\n  };\n\n  return (\n    <Container>\n      <Wrap>\n        <div>\n          <p>{name}</p>\n        </div>\n        <div>\n          <p>{phone}</p>\n        </div>\n      </Wrap>\n      <button\n        type=\"button\"\n        disabled={removing}\n        onClick={() => deleteContact(id)}\n      >\n        X\n      </button>\n      <button type=\"button\" disabled={removing} onClick={openModal}>\n        Edit\n      </button>\n    </Container>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 390px;\n  height: 300px;\n  padding: 0 10px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  overflow: auto;\n`;\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0px;\n`;\n","export const getContacts = state => state.contacts.contacts;\n\nexport const getFilterValue = state => state.contacts.filter;","import ContactListItem from './ContactListItem';\nimport { Container, ContactList } from './PhoneBook.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/selectors';\nimport { useGetContactsQuery } from 'redux/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst PhoneBook = () => {\n  const { data: contacts = [], error, isLoading } = useGetContactsQuery();\n  const filterValue = useSelector(getFilterValue);\n\n  const filteredItems = filterValue\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase().trim())\n      )\n    : contacts;\n\n  return (\n    <Container>\n      <Scrollbars style={{ width: '100%', height: '100%' }}>\n        {isLoading && Loader()}\n        {error && <h3>Ups...{error}</h3>}\n        <ContactList>\n          {filteredItems?.map(contact => (\n            <ContactListItem key={contact.id} contact={contact} />\n          ))}\n        </ContactList>\n      </Scrollbars>\n    </Container>\n  );\n};\n\nexport default PhoneBook;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto 20px auto;\n\n  lable {\n    display: block;\n    font-size: 14px;\n    display: block;\n  }\n\n  input {\n    display: block;\n    width: 300px;\n    height: 20px;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-width: 3px;\n    border-image: linear-gradient(to left, #00223e, #ffa17f);\n    border-image-slice: 1;\n    background: transparent;\n  }\n`;\n","import { Container } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contactsSlice';\nimport { getFilterValue } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilterValue);\n\n  const handleFilter = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <Container>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleFilter}\n        />\n      </label>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { Container, Title, SubTitle } from './Home.styled';\nimport ContactForm from 'components/ContactForm';\nimport { Suspense } from 'react';\nimport PhoneBook from 'components/PhoneBook';\nimport Filter from 'components/Filter';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      <Filter />\n      <PhoneBook />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["Loader","Loading","svgColor","backgroundColor","svgSize","Container","styled","Title","SubTitle","Form","useCreateContactMutation","createContact","isLoading","useGetContactsQuery","data","contacts","useState","name","setName","phone","setPhone","handleSubmit","e","preventDefault","newContact","some","contact","toLowerCase","Notify","position","timeout","reset","message","handleChange","currentTarget","value","onSubmit","type","pattern","title","required","onChange","disabled","Wrap","ContactListItem","useDeleteContactMutation","deleteContact","removing","navigate","useNavigate","id","onClick","prototype","PropTypes","number","ContactList","getFilterValue","state","filter","error","filterValue","useSelector","filteredItems","includes","trim","style","width","height","map","dispatch","useDispatch","filterContact","target","Suspense","fallback"],"sourceRoot":""}